/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uml2onto;

import com.hp.hpl.jena.ontology.OntModel;
import java.awt.Color;
import java.awt.Font;
import java.beans.PropertyVetoException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Dictionary;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author bukhari
 */
public class MDIMain extends javax.swing.JFrame {
public static Models model ;
public static boolean[] prop;

    /**
     * Creates new form MDIMain
     */
    public MDIMain() {
        initComponents();
        prop= new boolean[2];
        txt3 = new JTextArea();
        txt3.setForeground(Color.red);
        txt3.setFont(new Font("TYPE1_FONT",Font.BOLD,14));
        txt1 = new JTextArea();
        txt1.setFont(new Font("TYPE1_FONT",Font.PLAIN , 16));
        panel1 = new JPanel(); // create first panel
        txt2 = new JTextArea();
        txt2.setFont(new Font("TYPE1_FONT",Font.PLAIN , 16));
        panel2 = new JPanel(); // create first panel
        //txt1.setEditable(false);
        //txt2.setEditable(false);
        ImageLabel = new JLabel("D");
        ImageLabel.setHorizontalAlignment(JLabel.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        BTN_Load = new javax.swing.JButton();
        BTN_SetProperties = new javax.swing.JButton();
        BTN_Transformation = new javax.swing.JButton();
        BTN_Verification = new javax.swing.JButton();
        BTN_Verification1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UML2ONTO");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jToolBar1.setBackground(new java.awt.Color(204, 204, 204));
        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setRollover(true);
        jToolBar1.setDoubleBuffered(true);

        BTN_Load.setBackground(new java.awt.Color(204, 204, 204));
        BTN_Load.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uml2onto/img/load.png"))); // NOI18N
        BTN_Load.setText("Load Model");
        BTN_Load.setBorder(null);
        BTN_Load.setDoubleBuffered(true);
        BTN_Load.setFocusable(false);
        BTN_Load.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BTN_Load.setMaximumSize(new java.awt.Dimension(80, 80));
        BTN_Load.setPreferredSize(new java.awt.Dimension(100, 80));
        BTN_Load.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BTN_Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_LoadActionPerformed(evt);
            }
        });
        jToolBar1.add(BTN_Load);

        BTN_SetProperties.setBackground(new java.awt.Color(204, 204, 204));
        BTN_SetProperties.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uml2onto/img/tools.png"))); // NOI18N
        BTN_SetProperties.setText("Set Properties");
        BTN_SetProperties.setBorder(null);
        BTN_SetProperties.setFocusable(false);
        BTN_SetProperties.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BTN_SetProperties.setMaximumSize(new java.awt.Dimension(80, 80));
        BTN_SetProperties.setMinimumSize(new java.awt.Dimension(80, 80));
        BTN_SetProperties.setPreferredSize(new java.awt.Dimension(100, 80));
        BTN_SetProperties.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BTN_SetProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_SetPropertiesActionPerformed(evt);
            }
        });
        jToolBar1.add(BTN_SetProperties);

        BTN_Transformation.setBackground(new java.awt.Color(255, 255, 255));
        BTN_Transformation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uml2onto/img/Transformation.jpg"))); // NOI18N
        BTN_Transformation.setText("Transformation");
        BTN_Transformation.setFocusable(false);
        BTN_Transformation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BTN_Transformation.setMaximumSize(new java.awt.Dimension(100, 80));
        BTN_Transformation.setMinimumSize(new java.awt.Dimension(80, 80));
        BTN_Transformation.setPreferredSize(new java.awt.Dimension(100, 80));
        BTN_Transformation.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BTN_Transformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_TransformationActionPerformed(evt);
            }
        });
        jToolBar1.add(BTN_Transformation);

        BTN_Verification.setBackground(new java.awt.Color(255, 255, 255));
        BTN_Verification.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uml2onto/img/Verifcation.png"))); // NOI18N
        BTN_Verification.setText("Verification");
        BTN_Verification.setEnabled(false);
        BTN_Verification.setFocusable(false);
        BTN_Verification.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BTN_Verification.setMaximumSize(new java.awt.Dimension(100, 80));
        BTN_Verification.setMinimumSize(new java.awt.Dimension(100, 80));
        BTN_Verification.setPreferredSize(new java.awt.Dimension(100, 80));
        BTN_Verification.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BTN_Verification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_VerificationActionPerformed(evt);
            }
        });
        jToolBar1.add(BTN_Verification);

        BTN_Verification1.setBackground(new java.awt.Color(255, 255, 255));
        BTN_Verification1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uml2onto/img/CDOView.Options.png"))); // NOI18N
        BTN_Verification1.setEnabled(false);
        BTN_Verification1.setFocusable(false);
        BTN_Verification1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BTN_Verification1.setLabel("Instance Diagram");
        BTN_Verification1.setMaximumSize(new java.awt.Dimension(100, 80));
        BTN_Verification1.setMinimumSize(new java.awt.Dimension(100, 80));
        BTN_Verification1.setPreferredSize(new java.awt.Dimension(120, 80));
        BTN_Verification1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BTN_Verification1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_Verification1ActionPerformed(evt);
            }
        });
        jToolBar1.add(BTN_Verification1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 1278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setOpaque(true);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE))
        );
        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTabbedPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 148, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_LoadActionPerformed
        JFileChooser fileChooser = new JFileChooser();
         fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES );
         fileChooser.setCurrentDirectory(new File("src\\uml2onto\\SampleXMI"));
         int result = fileChooser.showOpenDialog( this );
     
         if (result == JFileChooser.CANCEL_OPTION)
         {
         }
         else   
         fileName = fileChooser.getSelectedFile();
         if ( ( fileName == null ) || ( fileName.getName().equals( "" )))
            {
                JOptionPane.showMessageDialog( this, "Invalid File Name",
                        "Invalid File Name", JOptionPane.ERROR_MESSAGE );
            }
        
                                if (jTabbedPane1.getTabCount()<1){
                                        jTabbedPane1.add("XMI File", new JScrollPane (txt1));
                                }
                                     
         loadXMI();
    }//GEN-LAST:event_BTN_LoadActionPerformed
    private void loadXMI() 
    {
       
            try
            {
                FileReader reader = new FileReader(fileName);
                    BufferedReader br = new BufferedReader(reader);
                    txt1.read( br, null );
                    
            }
            catch (Exception e2)
            {
            System.err.println( "Error opening file." );
            System.exit( 1 );
            }

        
       
    }
    private void loadResult()
    {
       if (validity){
        ImageIcon iconLogo = new ImageIcon("src\\uml2onto\\out.gif");
            ImageLabel.setIcon(iconLogo);
	    ImageLabel.updateUI();}
      else
       {
       //Loadfeedback();
               
               
       }
    }
   
    private void loadOWL() 
    {
        PreProcessing pre = new PreProcessing();
        File f= pre.RemoveExporter("src\\uml2onto\\out.txt"); 
        model.creatModel("file:src\\uml2onto\\out.ttl");
        
        try
            {
                FileReader reader = new FileReader(f);
                BufferedReader br = new BufferedReader(reader);
                txt2.read( br, null );
            }
            catch (Exception e2)
            {
            System.err.println( e2.toString() );
            System.exit( 1 );
            }

       
    }
    private void BTN_SetPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_SetPropertiesActionPerformed
        // TODO add your handling code here:
       FrmProperty frmPro= new FrmProperty();
       jDesktopPane1.add(frmPro);
    
         frmPro.setVisible(true);
       
    }//GEN-LAST:event_BTN_SetPropertiesActionPerformed

    private void BTN_TransformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_TransformationActionPerformed
        
        // TODO add your handling code here:
      if (fileName==null)
      {
      JOptionPane.showMessageDialog(this, "Load Model First");
      }
      else
      {
        TranformationForm frmTrans= new TranformationForm();
			jDesktopPane1.add(frmTrans);
				frmTrans.setVisible(true);
                                
                                if (jTabbedPane1.getTabCount()<2){
                                jTabbedPane1.add("OWL File", new JScrollPane(txt2));
                                }
                                
                                loadOWL();
                                jTabbedPane1.setSelectedIndex(1);
                                
                                BTN_Verification.setEnabled(true);
      }
      
    }//GEN-LAST:event_BTN_TransformationActionPerformed

    private void BTN_VerificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_VerificationActionPerformed
boolean xord=true, ass=true;
if (prop[0] && !prop[1])
{
DependencyVerification dv=new DependencyVerification();
xord= dv.Verification(model.readmodel);
}

if (!prop[0]  && prop[1])
{
AssociationVerification2 av=new AssociationVerification2();
ass=av.Verification(model.readmodel);
}

if ((prop[0] && prop[1]) ||(!prop[0] && !prop[1]) )
{
DependencyVerification dv=new DependencyVerification();
xord= dv.Verification(model.readmodel);
AssociationVerification av=new AssociationVerification();
ass=av.Verification(model.readmodel);

if (xord && ass)
{
txt3.setText("Class Diagram is Satisfiable");
BTN_Verification1.setEnabled(true);
List= av.list;
}
else if (!xord && ass)
{
    txt3.setText(txt3.getText()+ "The following Problems found in the xor or dependency relationships \n");
    txt3.setText(txt3.getText()+ dv.feedback);
   }
else if (xord && !ass)
{
txt3.setText(txt3.getText()+ "The following Problems found in the Associations \n");
    txt3.setText(txt3.getText()+ av.feedback);
   }

}

jTabbedPane1.add("Result", new JScrollPane(txt3));
jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_BTN_VerificationActionPerformed
ArrayList<Graph> List;
    private void BTN_Verification1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_Verification1ActionPerformed
        // TODO add your handling code here:
        Instances ins=new Instances(model.readmodel);
       
    }//GEN-LAST:event_BTN_Verification1ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        model= new Models();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDIMain().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_Load;
    private javax.swing.JButton BTN_SetProperties;
    private javax.swing.JButton BTN_Transformation;
    private javax.swing.JButton BTN_Verification;
    private javax.swing.JButton BTN_Verification1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    JLabel ImageLabel;
    JTextArea txt1;
    JPanel panel1; // create first panel
    JTextArea txt2;
    JTextArea txt3;
    JPanel panel2;// create first panel
    private static File fileName;
    boolean validity;
    //ArrayList <Feedback> txtResult;
    public static File getXMIFile()
    {
    return(fileName);
    }
}
